[{"/Users/sonali-najera/firenation/social-media-site/React/src/index.js":"1","/Users/sonali-najera/firenation/social-media-site/React/src/containers/App/App.js":"2","/Users/sonali-najera/firenation/social-media-site/React/src/routes/Profile/Profile.js":"3","/Users/sonali-najera/firenation/social-media-site/React/src/routes/RegistrationPage/RegistrationPage.js":"4","/Users/sonali-najera/firenation/social-media-site/React/src/routes/NotFoundPage/NotFoundPage.js":"5","/Users/sonali-najera/firenation/social-media-site/React/src/routes/LoginPage/LoginPage.js":"6","/Users/sonali-najera/firenation/social-media-site/React/src/components/Navbar/Navbar.js":"7","/Users/sonali-najera/firenation/social-media-site/React/src/components/ResetPassword/ResetPassword/ResetPassword.js":"8","/Users/sonali-najera/firenation/social-media-site/React/src/components/ResetPassword/Email/Email.js":"9","/Users/sonali-najera/firenation/social-media-site/React/src/components/PostContents/PostContents.js":"10","/Users/sonali-najera/firenation/social-media-site/React/src/components/Post/Post.js":"11","/Users/sonali-najera/firenation/social-media-site/React/src/components/BioCard/BioCard.js":"12","/Users/sonali-najera/firenation/social-media-site/React/src/components/RegistrationForm/RegistrationForm.js":"13","/Users/sonali-najera/firenation/social-media-site/React/src/components/LoginForm/LoginForm.js":"14","/Users/sonali-najera/firenation/social-media-site/React/src/components/SearchBar/SearchBar.js":"15","/Users/sonali-najera/firenation/social-media-site/React/src/components/BioMini/BioMini.js":"16","/Users/sonali-najera/firenation/social-media-site/React/src/routes/SearchResults/SearchResults.js":"17","/Users/sonali-najera/firenation/social-media-site/React/src/services/PostsApiService.js":"18","/Users/sonali-najera/firenation/social-media-site/React/src/components/RegistrationForm/ValidationError/ValidationError.js":"19"},{"size":337,"mtime":1609559839839,"results":"20","hashOfConfig":"21"},{"size":1295,"mtime":1609908293790,"results":"22","hashOfConfig":"21"},{"size":360,"mtime":1609907345447,"results":"23","hashOfConfig":"21"},{"size":408,"mtime":1609559839840,"results":"24","hashOfConfig":"21"},{"size":633,"mtime":1609908167674,"results":"25","hashOfConfig":"21"},{"size":431,"mtime":1609908167673,"results":"26","hashOfConfig":"21"},{"size":1307,"mtime":1609909313551,"results":"27","hashOfConfig":"21"},{"size":974,"mtime":1609908167672,"results":"28","hashOfConfig":"21"},{"size":1537,"mtime":1609908167671,"results":"29","hashOfConfig":"21"},{"size":1906,"mtime":1609907287662,"results":"30","hashOfConfig":"21"},{"size":552,"mtime":1609903231735,"results":"31","hashOfConfig":"21"},{"size":642,"mtime":1609905123983,"results":"32","hashOfConfig":"21"},{"size":6498,"mtime":1609908429647,"results":"33","hashOfConfig":"21"},{"size":1284,"mtime":1609908167670,"results":"34","hashOfConfig":"21"},{"size":3506,"mtime":1609908167672,"results":"35","hashOfConfig":"21"},{"size":597,"mtime":1609906695058,"results":"36","hashOfConfig":"21"},{"size":409,"mtime":1609561760323,"results":"37","hashOfConfig":"21"},{"size":728,"mtime":1609908167674,"results":"38","hashOfConfig":"21"},{"size":233,"mtime":1609909076444,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"g7k2qy",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sonali-najera/firenation/social-media-site/React/src/index.js",[],["85","86"],"/Users/sonali-najera/firenation/social-media-site/React/src/containers/App/App.js",["87"],"import React, { useState } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport './App.css'\nimport Nav from '../../components/Navbar/Navbar'\nimport Profile from '../../routes/Profile/Profile'\nimport LoginPage from '../../routes/LoginPage/LoginPage'\nimport RegistrationPage from '../../routes/RegistrationPage/RegistrationPage'\nimport Email from '../../components/ResetPassword/Email/Email'\nimport ResetPassword from '../../components/ResetPassword/ResetPassword/ResetPassword'\nimport NotFoundPage from '../../routes/NotFoundPage/NotFoundPage'\n\n\nconst App = () => {\n\n\n  return (\n    <section className=\"App\">\n      <Nav />\n      <Switch>\n        <Route exact path='/' component={LoginPage} />\n        <Route exact path='/user/profile' component={Profile} />\n        <Route exact path='/' render={(routerProps) => {\n          console.log(routerProps)\n          return (\n            <LoginPage location={routerProps} />\n          )\n        }} />\n        <Route exact path='/user/registration' component={RegistrationPage} />\n        <Route exact path='/user/email-reset-password' component={Email} />\n        <Route exact path='/user/reset-password' component={ResetPassword} />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </section>\n  )\n}\n\nexport default App;\n\n\n","/Users/sonali-najera/firenation/social-media-site/React/src/routes/Profile/Profile.js",[],"/Users/sonali-najera/firenation/social-media-site/React/src/routes/RegistrationPage/RegistrationPage.js",[],"/Users/sonali-najera/firenation/social-media-site/React/src/routes/NotFoundPage/NotFoundPage.js",["88"],"import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'react-bootstrap'\nimport { useSpring, animated } from 'react-spring'\nimport './NotFoundPage.css'\n\nconst NotFoundPage = () => {\n\n    //Using some basic animations for when the component renders\n    const props = useSpring({ opacity: 1, from: { opacity: 0 } })\n\n    return (\n        <animated.div className=\"not-found-wrapper\" style={props}>\n            <h2>404 - Page not found</h2>\n            <Link to='/'><Button variant=\"warning\">Back To Login</Button>{' '}</Link>\n        </animated.div>\n    )\n}\n\nexport default NotFoundPage\n","/Users/sonali-najera/firenation/social-media-site/React/src/routes/LoginPage/LoginPage.js",[],"/Users/sonali-najera/firenation/social-media-site/React/src/components/Navbar/Navbar.js",["89","90"],"/Users/sonali-najera/firenation/social-media-site/React/src/components/ResetPassword/ResetPassword/ResetPassword.js",[],"/Users/sonali-najera/firenation/social-media-site/React/src/components/ResetPassword/Email/Email.js",["91","92","93"],"import React from 'react';\nimport './Email.css'\nimport { Form, Button } from 'react-bootstrap'\nimport emailjs from 'emailjs-com';\nimport { init } from 'emailjs-com';\nimport { DesktopWindowsTwoTone } from '@material-ui/icons';\n//init(\"user_ehFDWoh9LFjdmwkg1ovQh\");\n\n\nfunction ResetPassword(props) {\n\n    \n    const sendMail = (ev) => {\n        //keep the page from reloading after submission\n        ev.preventDefault()\n        const { userEmail } = ev.target\n        console.log(userEmail.value)\n        //  let userEmail = document.getElementById('to-email').value;\n\n        window.Email.send({\n            SecureToken: \"6e849d89-435f-4ef6-8bd0-1f8385411022\",\n            To: userEmail.value,\n            From: \"made4development@gmail.com\",\n            Subject: \"This is the subject\",\n            Body: \"<html><h2>Hello,</h2><p>Click Here to <a href='http://localhost:3000/user/reset-password'>Reset Password </a></p></html>\"\n        }).then(\n            message => alert(message)\n        );\n        userEmail.value = ''\n    }\n    return (\n        <div className=\"reset-form-wrapper\">\n            <h3 className=\"reset-form-h3\">Please enter your email address you use to login</h3>\n            <Form onSubmit={(ev) => sendMail(ev)} className=\"reset-form\">\n                <Form.Control name=\"userEmail\" type=\"email\" id=\"to-email\" placeholder=\"Enter email\" required />\n                <br></br>\n                <Button variant=\"primary\" type=\"submit\">Send</Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default ResetPassword;","/Users/sonali-najera/firenation/social-media-site/React/src/components/PostContents/PostContents.js",["94","95"],"import { BorderVerticalRounded } from '@material-ui/icons';\nimport React from 'react'\nimport { Container, Button, Image, Col, } from 'react-bootstrap';\nimport ShowMoreText from 'react-show-more-text';\nimport BioMini from '../BioMini/BioMini';\nimport \"./PostContents.css\";\nimport PostImage from '../../images/ember.jpg'\n\nconst PostContents = () => {\n\n  const executeOnClick= (isExpanded)=> {\n    console.log(isExpanded);\n}\n\n\n  return (\n    <div className=\"postContent-container\">\n      <BioMini/>\n      <ShowMoreText\n                /* Default options */\n                lines={3}\n                more='Show more'\n                less='Show less'\n                className='content-css'\n                anchorClass='my-anchor-css-class'\n                onClick={executeOnClick}\n                expanded={false}\n  \n            >\n                Lorem ipsum dolor sit amet, consectetuut labore et dolore magna amet, consectetur adipiscing elit, \n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n                minim veniam, quis nostrud exercitation ullamco laboris nisi\n                ut aliquip ex Lorem ipsum dolor sit amet, consectetur\n                adipiscing elit, sed do eiusmod tempor incididunt ut labore\n \n                et dolore magna aliqua. Ut enim ad minim veniam, quis\n                nostrud exercitation ullamco laboris nisi ut aliquip ex\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n                do eiusmod tempor incididunt ut labore et dolore magna\n                aliqua. Ut enim ad minim veniam, quis nostrud exercitation\n            </ShowMoreText>\n      <Container>\n        <div>\n        <Image src={PostImage} rounded />\n        </div>\n      <Button variant=\"light\">like</Button>\n      <Button variant=\"light\">comment</Button>\n      </Container>\n     \n    </div>\n  )\n}\n\nexport default PostContents\n","/Users/sonali-najera/firenation/social-media-site/React/src/components/Post/Post.js",[],"/Users/sonali-najera/firenation/social-media-site/React/src/components/BioCard/BioCard.js",[],"/Users/sonali-najera/firenation/social-media-site/React/src/components/RegistrationForm/RegistrationForm.js",["96"],"import React, { useState } from 'react'\nimport { Form, Col, Button } from 'react-bootstrap'\nimport './RegistrationForm.css'\nimport ValidationError from './ValidationError/ValidationError'\n\n\nconst RegistrationForm = () => {\n\n    //Store the form fields in state to achieve a \"controlled form\", which enhances users' interactivity with forms\n    const [email, setEmail] = useState({ value: '', touched: false })\n    const [firstName, setFirstName] = useState({ value: '', touched: false })\n    const [lastName, setLastName] = useState({ value: '', touched: false })\n    const [password, setPassword] = useState({ value: '', touched: false })\n    const [repeatPassword, setRepeatPassword] = useState({ value: '', touched: false })\n\n\n    //Update the values of the state properties to trigger at the \"onChange\" attributes of the inputs.\n\n    const updateEmail = (email) => {\n        setEmail({ value: email, touched: true })\n    }\n\n    const updateFirstName = (firstName) => {\n        setFirstName({ value: firstName, touched: true })\n    }\n\n    const updateLastName = (lastName) => {\n        setLastName({ value: lastName, touched: true })\n    }\n\n    const updatePassword = (password) => {\n        setPassword({ value: password, touched: true })\n    }\n\n    const updateRepeatPassword = (repeatPassword) => {\n        setRepeatPassword({ value: repeatPassword, touched: true })\n    }\n\n\n\n    //this is the api call function\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        console.log(email.value, firstName.value, lastName.value, password.value)\n\n        const registrationJSON = {\n            email: email.value,\n            firstName: firstName.value,\n            lastName: lastName.value,\n            password: password.value\n        }\n\n        //in the POST request's body, send the JSON.stringify(registrationJSON)\n    }\n\n\n    //Basic form validations\n    \n    const validateEmail = () => {\n        //Check the emails in the DB to ensure emails' uniqueness. \n    }\n\n    const validateFirstName = () => {\n        const firstNameValue = firstName.value.trim()\n\n        if (!firstNameValue.length) {\n            return \"First name is required\";\n        } else if (firstNameValue.length < 3) {\n            return `First name must be at least 3 characters long`\n        }\n    }\n\n    const validateLastName = () => {\n        const lastNameValue = lastName.value.trim()\n        if (!lastNameValue.length) {\n            return \"Last name is required\";\n        } else if (lastNameValue.length < 3) {\n            return 'Last name  must be at least 3 characters long'\n        }\n    }\n\n\n    const validatePassword = () => {\n        const userPassword = password.value.trim()\n        if (!userPassword.length) {\n            return \"Password is required\"\n        } else if (userPassword.length < 6 || userPassword.length > 72) {\n            return \"Password must be between 6 and 72 characters long\"\n        } else if (!userPassword.match(/[0-9]/)) {\n            return \"Password must contain at least one number\"\n        }\n    }\n\n\n    const validateRepeatPassword = () => {\n        const userRepeatPassword = repeatPassword.value.trim()\n        const userPassword = password.value.trim()\n\n        if (userRepeatPassword !== userPassword) {\n            return 'Passwords do not match'\n        }\n    }\n\n\n    return (\n        <section className=\"registration-wrapper\">\n            <Form className=\"registration-form\" onSubmit={e => handleSubmit(e)}>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridEmail\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                            className=\"registration-control\" type=\"email\"\n                            placeholder=\"Enter email\" onChange={e => updateEmail(e.target.value)} />\n                        {email.touched && <ValidationError message={validateEmail()} />}\n                    </Form.Group>\n\n                </Form.Row>\n\n                <Form.Group controlId=\"formGridAddress1\">\n                    <Form.Label>First Name</Form.Label>\n                    <Form.Control\n                        className=\"registration-control\" type=\"text\"\n                        placeholder=\"First Name\" onChange={e => updateFirstName(e.target.value)} />\n                    {firstName.touched && <ValidationError message={validateFirstName()} />}\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridAddress2\">\n                    <Form.Label>Last Name</Form.Label>\n                    <Form.Control\n                        className=\"registration-control\" type=\"text\"\n                        placeholder=\"Last Name\" onChange={e => updateLastName(e.target.value)} />\n                    {lastName.touched && <ValidationError message={validateLastName()} />}\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        className=\"registration-control\" type=\"password\"\n                        placeholder=\"Password\" onChange={e => updatePassword(e.target.value)} />\n                    {password.touched && <ValidationError message={validatePassword()} />}\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridPassword\">\n                    <Form.Label>Validate Password</Form.Label>\n                    <Form.Control\n                        className=\"registration-control\" type=\"password\"\n                        placeholder=\"Password\" onChange={e => updateRepeatPassword(e.target.value)} />\n                    {repeatPassword.touched && <ValidationError message={validateRepeatPassword()} />}\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.File id=\"exampleFormControlFile1\" label=\"Upload a profile picture\" />\n                </Form.Group>\n\n\n                <Button className=\"registration-btn\" variant=\"primary\" type=\"reset\">\n                    Cancel\n                </Button>\n                <Button className=\"registration-btn\"\n                    variant=\"primary\" type=\"submit\"\n                    disabled={\n                    /* validateEmail() || */ validateFirstName() || validateLastName() || validatePassword() || validateRepeatPassword()\n                    }\n                >\n                    Save\n                </Button>\n            </Form>\n        </section>\n    )\n}\n\nexport default RegistrationForm\n","/Users/sonali-najera/firenation/social-media-site/React/src/components/LoginForm/LoginForm.js",[],"/Users/sonali-najera/firenation/social-media-site/React/src/components/SearchBar/SearchBar.js",["97","98","99","100"],"import React, { useContext, useState, useEffect } from 'react'\nimport SearchResults from '../../routes/SearchResults/SearchResults'\n/*The Sevice file from which the \"users\" JSON which carries the firstNames to \ndisplay as search results and allow the user to click to go to the selected user's profile. \n*/\nimport PostsApiService from '../../services/PostsApiService'\nimport './SearchBar.css'\n//Do NOT delete the next line. \"M\" is necessary for using materialize css.\nimport M from \"materialize-css\"\nimport \"materialize-css/dist/js/materialize.min.js\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport Autocomplete from 'react-autocomplete'\n\nconst SearchBar = (props) => {\n    //friends is an array of user objects that the current user needs to search for their friends.\n    const [friends, setFriends] = useState([])\n    const [search, setSearch] = useState('')\n\n    //populate the friends in the state as soon as the component renders.\n    useEffect(() => {\n        const dummyData = PostsApiService.getDummyData()\n        setFriends(dummyData)\n    }, [])\n\n    //Autocomplete is a component from a 3rd party library called 'react-autocomplete'.\n    return (\n        <section className=\"search-bar-and-results\">\n            <Autocomplete\n                getItemValue={(item) => item.firstName + ' ' + item.lastName}\n                items={friends}\n                shouldItemRender={(item, search) => item.firstName.toLowerCase().indexOf(search.toLowerCase()) !== -1\n                    || item.lastName.toLowerCase().indexOf(search.toLowerCase()) !== -1}\n\n                renderItem={(item, isHighlighted) =>\n                    <div key={item.id} style={{ background: isHighlighted ? 'lightgray' : 'orange' }}>\n                        {/*This is where we grab the item's(friend's) id to redirect to that friend's page*/}\n                        <span onClick={() => console.log(\"Function to redirect to that friend/ or in the onSelect attribute\")}>{item.firstName} {item.lastName}</span>\n                    </div>\n                }\n                inputProps={{ placeholder: \"Find your friends\" }}\n                value={search}\n                onChange={(e) => setSearch(e.target.value.substr(0, 20).toLowerCase())}\n                onSelect={(value) => {\n                    setSearch(value)\n                    console.log(value)\n                }}\n            />\n        </section>\n    )\n}\nexport default SearchBar\n\n\n/////////KEEP THIS HERE IN CASE WE WANNA SWITCH BACK TO Vanilla\n// const [searching, setSearching] = useState(false)\n\n{/* <input value={search} className=\"form-control\" type=\"text\" placeholder=\"Search\" onChange={(ev) => {\n                updateSearch(ev)\n                toggleSearching(ev)\n            }} />\n            {!searching ? '' : <SearchResults filteredFriends={filteredFriends} />} */}\n\n\n  // //Get user's input and store that in the \"search\" property in the state\n// const updateSearch = (event) => {\n//     setSearch(event.target.value.substr(0, 20).toLowerCase())\n// }\n\n\n// //display the results when searching, hide them afterwards.\n// const toggleSearching = (ev) => {\n//     if (ev.target.value.length) {\n//         setSearching(true)\n//     }\n//     else {\n//         setSearching(false)\n//     }\n// }\n\n// // //Display only the results whose letters are included within the searched word(user's input)\n// let filteredFriends = friends.filter(\n//     (friend) => {\n//         return friend.firstName.toLowerCase().indexOf(search) !== -1;\n//     }\n// )\n","/Users/sonali-najera/firenation/social-media-site/React/src/components/BioMini/BioMini.js",[],"/Users/sonali-najera/firenation/social-media-site/React/src/routes/SearchResults/SearchResults.js",[],"/Users/sonali-najera/firenation/social-media-site/React/src/services/PostsApiService.js",[],"/Users/sonali-najera/firenation/social-media-site/React/src/components/RegistrationForm/ValidationError/ValidationError.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"109","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"110","severity":1,"message":"111","line":20,"column":17,"nodeType":"112","endLine":20,"endColumn":50},{"ruleId":"110","severity":1,"message":"111","line":23,"column":17,"nodeType":"112","endLine":23,"endColumn":94},{"ruleId":"105","severity":1,"message":"113","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":15},{"ruleId":"105","severity":1,"message":"114","line":5,"column":10,"nodeType":"107","messageId":"108","endLine":5,"endColumn":14},{"ruleId":"105","severity":1,"message":"115","line":6,"column":10,"nodeType":"107","messageId":"108","endLine":6,"endColumn":31},{"ruleId":"105","severity":1,"message":"116","line":1,"column":10,"nodeType":"107","messageId":"108","endLine":1,"endColumn":31},{"ruleId":"105","severity":1,"message":"117","line":3,"column":36,"nodeType":"107","messageId":"108","endLine":3,"endColumn":39},{"ruleId":"105","severity":1,"message":"118","line":46,"column":15,"nodeType":"107","messageId":"108","endLine":46,"endColumn":31},{"ruleId":"105","severity":1,"message":"119","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":27},{"ruleId":"105","severity":1,"message":"120","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":21},{"ruleId":"105","severity":1,"message":"121","line":9,"column":8,"nodeType":"107","messageId":"108","endLine":9,"endColumn":9},{"ruleId":"122","severity":1,"message":"123","line":57,"column":1,"nodeType":"124","messageId":"125","endLine":61,"endColumn":88},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'emailjs' is defined but never used.","'init' is defined but never used.","'DesktopWindowsTwoTone' is defined but never used.","'BorderVerticalRounded' is defined but never used.","'Col' is defined but never used.","'registrationJSON' is assigned a value but never used.","'useContext' is defined but never used.","'SearchResults' is defined but never used.","'M' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]